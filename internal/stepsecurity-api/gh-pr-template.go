package stepsecurityapi

import (
	"context"
	"encoding/json"
	"fmt"
)

type GitHubPRTemplate struct {
	Title         string   `json:"title"`
	Summary       string   `json:"summary"`
	CommitMessage string   `json:"commit_message"`
	Labels        []string `json:"labels,omitempty"`
}

func (c *APIClient) GetGitHubPRTemplate(ctx context.Context, owner string) (*GitHubPRTemplate, error) {
	URI := fmt.Sprintf("%s/v1/github/%s/pr-template", c.BaseURL, owner)
	respBody, err := c.get(ctx, URI)
	if err != nil {
		return nil, fmt.Errorf("failed to get PR template: %w", err)
	}

	var template GitHubPRTemplate
	if err := json.Unmarshal(respBody, &template); err != nil {
		return nil, fmt.Errorf("failed to unmarshal PR template: %w", err)
	}

	return &template, nil
}

func (c *APIClient) UpdateGitHubPRTemplate(ctx context.Context, owner string, template GitHubPRTemplate) error {
	URI := fmt.Sprintf("%s/v1/github/%s/pr-template", c.BaseURL, owner)
	_, err := c.post(ctx, URI, template)
	if err != nil {
		return fmt.Errorf("failed to update PR template: %w", err)
	}

	return nil
}

func (c *APIClient) DeleteGitHubPRTemplate(ctx context.Context, owner string) error {
	// Reset PR template to default values
	template := GitHubPRTemplate{
		Title:         "[StepSecurity] Apply security best practices",
		Summary:       "## Summary\n\nThis pull request has been generated by [StepSecurity](https://int1.stepsecurity.io/github/shubham-stepsecurity/actions/dashboard) as part of your enterprise subscription to ensure compliance with recommended security best practices. Please review and merge the pull request to apply these security enhancements.\n\n## Security Fixes\n\n{{STEPSECURITY_SECURITY_FIXES}}\n\n## Feedback\nFor bug reports, feature requests, and general feedback; please create an issue in [step-security/secure-repo](https://github.com/step-security/secure-repo) or contact us via [our website](https://www.stepsecurity.io/).\n\n\n",
		CommitMessage: "[StepSecurity] Apply security best practices\n\nSigned-off-by: StepSecurity Bot <bot@stepsecurity.io>",
		Labels:        []string{},
	}

	err := c.UpdateGitHubPRTemplate(ctx, owner, template)
	if err != nil {
		return fmt.Errorf("failed to delete PR template: %w", err)
	}

	return nil
}
